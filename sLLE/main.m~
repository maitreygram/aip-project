close all;
clear;

% Read image
P = phantom('Modified Shepp-Logan',200);
imshow(P)

% Get projections
numAngles = 360;
% angles = rand(numAngles,1) * 360; % random angles
angles = 1:360;

R = radon(P, angles);

% estimate angles
epsilon = 10^6;
anglesEst = sLLE_ang_est(R',epsilon)*(180/numAngles);
% angleEst = angles;
% reconstruct using fbp
% [X,Y] = size(P);
% [Z,~] = size(R);
% img_center = [ceil(X/2),ceil(Y/2)];
% proj_center = ceil(Z/2);
% 
% ram_lak = zeros(Z,1);
% for i=1:Z/2
%     ram_lak(i) = Z/2 - i;
%     ram_lak(Z+1-i) = ram_lak(i);
% end
% 
% F_R = fft(R); % fourier transform of all radon transforms
% F_R = fftshift(F_R);
% F_R = F_R .* ram_lak;
% F_R = ifftshift(F_R);
% R_new = ifft(F_R);
% 
% recons_P = zeros(X,Y);
% for i=1:X
%     for j=1:Y
%         for k = 1:numAngles
%             pixel_loc = round((i-img_center(1))*sind(angles(k)) + (j-img_center(2))*cosd(angles(k))) + proj_center;
%             recons_P(i,j) = recons_P(i,j) + R_new(pixel_loc,k);
%         end
%     end
% end
uni_ang = (1:numAngles)*360/numAngles
recons_P = iradon(R,uni_ang,'Ram-Lak');
recons_P = recons_P(2:end-1,2:end-1);
% show result
figure, imshow(mat2gray(recons_P));
l2_norm = norm(recons_P-double(P))